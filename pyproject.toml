[tool.poetry]
name = "TimeEval"
version = "1.2.6rc2"
description = "Evaluation Tool for Time Series Anomaly Detection Methods"
authors = [
    "Sebastian Schmidl <sebastian.schmidl@hpi.de>",
    "Phillip Wenig <phillip.wenig@hpi.de>"
]
license = "MIT"
#license_file = "LICENSE"
readme = "README.md"
repository = "https://github.com/HPI-Information-Systems/TimeEval"
keywords = [
    "time-series", "time-series-analysis", "anomaly-detection", "benchmark-framework", "distributed"
]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Benchmark",
    "Typing :: Typed"
    # License and python IDs are added automatically
]

packages = [
    { include = "timeeval" },
    { include = "timeeval_experiments" }
]
include = [ "LICENSE", "timeeval/py.typed", "timeeval_experiments/py.typed" ]

[tool.poetry.dependencies]
python = ">=3.7.1, <3.10"
pip = ">=20"
numpy = "^1.21"
pandas = "^1.3"
scikit-learn = "^0.24"
matplotlib = "^3.5"
scipy = "^1.7"
statsmodels = "^0.12"
importlib-metadata = { version = ">1.4", python = "<3.8" }
jinja2 = "^3.1"
tqdm = "^4.64"
asyncssh = "^2.11"
psutil = "^5.9"
dask = { version = "2021.5", extras = ["distributed"] }
click = "8.0.2"  # newer versions are not compatible with dask[distributed] ATM; remove if fixed upstream (https://github.com/dask/distributed/issues/6013)
docker = "^4.4"
durations = "^0.3"
prts = "1.0.0.3"
numpyencoder = "^0.3"

# optional `extra` dependencies
# for scripts
multiprocessing_logging = { version = "^0.3", optional = true}

# for notebooks
jupyterlab = { version = "*", optional = true }
tables = { version = "*", optional = true }
pyyaml = { version = "^6.0", optional = true }
pylustrator = { version = "^1.1.0", optional = true }
wfdb = { version = "^3.4", optional = true }
plotly = { version = "^5.1", optional = true }

# for dask dashboard
bokeh = { version = "^0.13.0", optional = true }

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-cov = "*"
mypy = "0.920"
freezegun = "^1.1"
types-requests = "*"
types-freezegun = "*"

[tool.poetry.extras]
scripts = ["multiprocessing_logging"]
notebooks = [
    "jupyterlab",
    "wfdb",
    "tables",
    "pyyaml",
    "pylustrator",
    "plotly",
]
dashboard = ["bokeh"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = false
omit = ["**/__main__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "\\.\\.\\.",
    "def __repr__",
    "pass"
]
fail_under = 80
skip_covered = true
sort = "Cover"

[tool.mypy]
warn_unused_configs = true
warn_unused_ignores = true
warn_no_return = true
show_error_codes = true
exclude = "(^timeeval_experiments/\\d\\d\\d\\d-\\d\\d-\\d\\d[_-].+$)"

[[tool.mypy.overrides]]
module = ["timeeval"]
warn_return_any = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "matplotlib.*",
    "pandas.*",
    "tqdm.*",
    "dask.*",
    "distributed.client.*",
    "docker.*",
    "durations.*",
    "psutil.*",
    "prts.*",
    "statsmodels.*",
    "joblib.*",
    "numpyencoder.*",
    "scipy.*",
]
ignore_missing_imports = true

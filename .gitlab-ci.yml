# akita conda runner uses the following image by default:
# image: continuumio/miniconda3:4.9.2

stages:
  - test
  - build
  - deploy

workflow:
  rules:
    # If `$FORCE_GITLAB_CI` is set, create a pipeline.
    - if: '$FORCE_GITLAB_CI'
    # For merge requests, create a pipeline.
    - if: '$CI_MERGE_REQUEST_IID'
    # For `master` branch, create a pipeline (this includes on schedules, pushes, merges, etc.).
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    # For tags, create a pipeline.
    - if: '$CI_COMMIT_TAG'
    # For branches starting with 'doc/' don't create a pipeline
    - if: '$CI_COMMIT_BRANCH =~ /^doc\//'
      when: never

.matrix-common:
  tags:
    - akita
    - conda
  before_script: &common-before-script
    - export PIP_CACHE_DIR="/opt/cache/pip"
    - echo "Setting up conda environment and installing dependencies"
    - conda create -y -n timeeval python=${PYTHON_VERSION:-3.7}
    - conda env update -n timeeval -f environment.yml
    - source activate timeeval
    - pip install -r requirements.ci
    - python --version
  parallel:
    matrix:
        - PYTHON_VERSION: ["3.7", "3.8", "3.9"]

test:
  extends: .matrix-common
  stage: test
  interruptible: true
  script:
    - python setup.py typecheck
    - python setup.py test
  artifacts:
    reports:
      cobertura: coverage.xml

build:
  stage: build
  needs:
    - test
  tags:
    - akita
    - conda
  only:
    - tags
  before_script:
    - *common-before-script
  script:
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist/*.tar.gz
      - dist/*.whl

deploy:
  stage: deploy
  needs:
    - build
  tags:
    - akita
    - conda
  only:
    - tags
  before_script:
    - export PIP_CACHE_DIR="/opt/cache/pip"
    - echo "Setting up conda environment with twine for deployment"
    - conda create -y -n deploy python=3.7 twine
    - source activate deploy
  script:
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url https://gitlab.hpi.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*

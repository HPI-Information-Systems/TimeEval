image: conda/miniconda3

stages:
  - test
  - build
  - deploy

workflow:
  rules:
    # If `$FORCE_GITLAB_CI` is set, create a pipeline.
    - if: '$FORCE_GITLAB_CI'
    # For merge requests, create a pipeline.
    - if: '$CI_MERGE_REQUEST_IID'
    # For `master` branch, create a pipeline (this includes on schedules, pushes, merges, etc.).
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    # For tags, create a pipeline.
    - if: '$CI_COMMIT_TAG'
    # For branches starting with 'doc/' don't create a pipeline
    - if: '$CI_COMMIT_BRANCH =~ /^doc\//'
      when: never

before_script:
  - echo "Setting up conda environment and installing dependencies"
  - conda env create -n timeeval -f environment.yml
  - source activate timeeval
  - pip install -r requirements.dev

test:
  stage: test
  interruptible: true
  script:
#    - python setup.py typecheck
    - python setup.py test

build:
  stage: build
#  only:
#    - tags
  script:
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz

deploy:
  stage: deploy
#  only:
#    - tags
  script:
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token \
      python -m twine upload --repository-url https://gitlab.hpi.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*
